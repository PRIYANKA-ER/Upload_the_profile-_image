{"ast":null,"code":"var _jsxFileName = \"D:\\\\program project\\\\React Django\\\\imageupload\\\\client\\\\src\\\\dump.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport ReactCrop from \"react-image-crop\";\nimport \"react-image-crop/dist/ReactCrop.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Dump() {\n  _s();\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [crop, setCrop] = useState({\n    unit: \"%\",\n    width: 30,\n    aspect: 1\n  });\n  const [croppedImage, setCroppedImage] = useState(null);\n  const imageRef = useRef(null);\n  const handleImageSelect = event => {\n    if (event.target.files && event.target.files.length > 0) {\n      const reader = new FileReader();\n      reader.onload = () => {\n        setSelectedImage(reader.result);\n      };\n      reader.readAsDataURL(event.target.files[0]);\n    }\n  };\n  const handleCropComplete = (croppedArea, croppedAreaPixels) => {\n    if (imageRef.current && croppedAreaPixels.width && croppedAreaPixels.height) {\n      const canvas = document.createElement(\"canvas\");\n      const scaleX = imageRef.current.naturalWidth / imageRef.current.width;\n      const scaleY = imageRef.current.naturalHeight / imageRef.current.height;\n      canvas.width = croppedAreaPixels.width;\n      canvas.height = croppedAreaPixels.height;\n      const ctx = canvas.getContext(\"2d\");\n      ctx.drawImage(imageRef.current, croppedAreaPixels.x * scaleX, croppedAreaPixels.y * scaleY, croppedAreaPixels.width * scaleX, croppedAreaPixels.height * scaleY, 0, 0, croppedAreaPixels.width, croppedAreaPixels.height);\n      const croppedImageUrl = canvas.toDataURL(\"image/png\");\n      setCroppedImage(croppedImageUrl);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: handleImageSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), selectedImage && /*#__PURE__*/_jsxDEV(ReactCrop, {\n      src: selectedImage,\n      crop: crop,\n      onChange: newCrop => setCrop(newCrop),\n      onComplete: handleCropComplete,\n      imageStyle: {\n        maxHeight: \"100%\",\n        maxWidth: \"100%\"\n      },\n      ref: imageRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), croppedImage && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Cropped Image Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: croppedImage,\n        alt: \"Cropped\",\n        style: {\n          maxWidth: \"100%\",\n          maxHeight: \"300px\",\n          objectFit: \"cover\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(Dump, \"dutj6M4g5woo7QnhGRrWXyHz2BE=\");\n_c = Dump;\nvar _c;\n$RefreshReg$(_c, \"Dump\");","map":{"version":3,"names":["React","useState","useRef","ReactCrop","jsxDEV","_jsxDEV","Dump","_s","selectedImage","setSelectedImage","crop","setCrop","unit","width","aspect","croppedImage","setCroppedImage","imageRef","handleImageSelect","event","target","files","length","reader","FileReader","onload","result","readAsDataURL","handleCropComplete","croppedArea","croppedAreaPixels","current","height","canvas","document","createElement","scaleX","naturalWidth","scaleY","naturalHeight","ctx","getContext","drawImage","x","y","croppedImageUrl","toDataURL","children","type","accept","onChange","fileName","_jsxFileName","lineNumber","columnNumber","src","newCrop","onComplete","imageStyle","maxHeight","maxWidth","ref","alt","style","objectFit","_c","$RefreshReg$"],"sources":["D:/program project/React Django/imageupload/client/src/dump.jsx"],"sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport ReactCrop from \"react-image-crop\";\r\nimport \"react-image-crop/dist/ReactCrop.css\";\r\n\r\nexport default function Dump() {\r\n  const [selectedImage, setSelectedImage] = useState(null);\r\n  const [crop, setCrop] = useState({ unit: \"%\", width: 30, aspect: 1 });\r\n  const [croppedImage, setCroppedImage] = useState(null);\r\n  const imageRef = useRef(null);\r\n\r\n  const handleImageSelect = (event) => {\r\n    if (event.target.files && event.target.files.length > 0) {\r\n      const reader = new FileReader();\r\n      reader.onload = () => {\r\n        setSelectedImage(reader.result);\r\n      };\r\n      reader.readAsDataURL(event.target.files[0]);\r\n    }\r\n  };\r\n\r\n  const handleCropComplete = (croppedArea, croppedAreaPixels) => {\r\n    if (\r\n      imageRef.current &&\r\n      croppedAreaPixels.width &&\r\n      croppedAreaPixels.height\r\n    ) {\r\n      const canvas = document.createElement(\"canvas\");\r\n      const scaleX = imageRef.current.naturalWidth / imageRef.current.width;\r\n      const scaleY = imageRef.current.naturalHeight / imageRef.current.height;\r\n      canvas.width = croppedAreaPixels.width;\r\n      canvas.height = croppedAreaPixels.height;\r\n      const ctx = canvas.getContext(\"2d\");\r\n      ctx.drawImage(\r\n        imageRef.current,\r\n        croppedAreaPixels.x * scaleX,\r\n        croppedAreaPixels.y * scaleY,\r\n        croppedAreaPixels.width * scaleX,\r\n        croppedAreaPixels.height * scaleY,\r\n        0,\r\n        0,\r\n        croppedAreaPixels.width,\r\n        croppedAreaPixels.height\r\n      );\r\n      const croppedImageUrl = canvas.toDataURL(\"image/png\");\r\n      setCroppedImage(croppedImageUrl);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input type=\"file\" accept=\"image/*\" onChange={handleImageSelect} />\r\n      {selectedImage && (\r\n        <ReactCrop\r\n          src={selectedImage}\r\n          crop={crop}\r\n          onChange={(newCrop) => setCrop(newCrop)}\r\n          onComplete={handleCropComplete}\r\n          imageStyle={{ maxHeight: \"100%\", maxWidth: \"100%\" }}\r\n          ref={imageRef}\r\n        />\r\n      )}\r\n      {croppedImage && (\r\n        <div>\r\n          <h2>Cropped Image Preview</h2>\r\n          <img\r\n            src={croppedImage}\r\n            alt=\"Cropped\"\r\n            style={{ maxWidth: \"100%\", maxHeight: \"300px\", objectFit: \"cover\" }}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}