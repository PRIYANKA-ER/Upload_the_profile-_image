{"ast":null,"code":"var _jsxFileName = \"D:\\\\program project\\\\React Django\\\\imageupload\\\\client\\\\src\\\\dump.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport ReactCrop from \"react-image-crop\";\nimport \"react-image-crop/dist/ReactCrop.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dump = () => {\n  _s();\n  const [src, setSrc] = useState(null);\n  const [crop, setCrop] = useState({\n    unit: \"%\",\n    width: 30,\n    aspect: 16 / 9\n  });\n  const [croppedImage, setCroppedImage] = useState(null);\n  const onSelectFile = e => {\n    if (e.target.files && e.target.files.length > 0) {\n      const reader = new FileReader();\n      reader.addEventListener(\"load\", () => setSrc(reader.result));\n      reader.readAsDataURL(e.target.files[0]);\n    }\n  };\n  const onCropComplete = crop => {\n    makeClientCrop(crop);\n  };\n  const makeClientCrop = async crop => {\n    if (src && crop.width && crop.height) {\n      getCroppedImg(src, crop);\n    }\n  };\n  const getCroppedImg = (src, crop) => {\n    const image = new Image();\n    image.src = src;\n    const canvas = document.createElement(\"canvas\");\n    const scaleX = image.naturalWidth / image.width;\n    const scaleY = image.naturalHeight / image.height;\n    canvas.width = crop.width;\n    canvas.height = crop.height;\n    const ctx = canvas.getContext(\"2d\");\n    ctx.drawImage(image, crop.x * scaleX, crop.y * scaleY, crop.width * scaleX, crop.height * scaleY, 0, 0, crop.width, crop.height);\n    const croppedImageSrc = canvas.toDataURL(\"image/jpeg\");\n    setCroppedImage(croppedImageSrc);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: onSelectFile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), src && /*#__PURE__*/_jsxDEV(ReactCrop, {\n      src: src,\n      crop: crop,\n      ruleOfThirds: true,\n      onComplete: onCropComplete,\n      onChange: c => setCrop(c)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), croppedImage && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: croppedImage,\n      alt: \"Cropped\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(Dump, \"zWxN43d67o7RMruKpTownE5fKbE=\");\n_c = Dump;\nexport default Dump;\nvar _c;\n$RefreshReg$(_c, \"Dump\");","map":{"version":3,"names":["React","useState","ReactCrop","jsxDEV","_jsxDEV","Dump","_s","src","setSrc","crop","setCrop","unit","width","aspect","croppedImage","setCroppedImage","onSelectFile","e","target","files","length","reader","FileReader","addEventListener","result","readAsDataURL","onCropComplete","makeClientCrop","height","getCroppedImg","image","Image","canvas","document","createElement","scaleX","naturalWidth","scaleY","naturalHeight","ctx","getContext","drawImage","x","y","croppedImageSrc","toDataURL","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","ruleOfThirds","onComplete","c","alt","_c","$RefreshReg$"],"sources":["D:/program project/React Django/imageupload/client/src/dump.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport ReactCrop from \"react-image-crop\";\r\nimport \"react-image-crop/dist/ReactCrop.css\";\r\n\r\nconst Dump = () => {\r\n  const [src, setSrc] = useState(null);\r\n  const [crop, setCrop] = useState({ unit: \"%\", width: 30, aspect: 16 / 9 });\r\n  const [croppedImage, setCroppedImage] = useState(null);\r\n\r\n  const onSelectFile = (e) => {\r\n    if (e.target.files && e.target.files.length > 0) {\r\n      const reader = new FileReader();\r\n      reader.addEventListener(\"load\", () => setSrc(reader.result));\r\n      reader.readAsDataURL(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  const onCropComplete = (crop) => {\r\n    makeClientCrop(crop);\r\n  };\r\n\r\n  const makeClientCrop = async (crop) => {\r\n    if (src && crop.width && crop.height) {\r\n      getCroppedImg(src, crop);\r\n    }\r\n  };\r\n\r\n  const getCroppedImg = (src, crop) => {\r\n    const image = new Image();\r\n    image.src = src;\r\n\r\n    const canvas = document.createElement(\"canvas\");\r\n    const scaleX = image.naturalWidth / image.width;\r\n    const scaleY = image.naturalHeight / image.height;\r\n    canvas.width = crop.width;\r\n    canvas.height = crop.height;\r\n\r\n    const ctx = canvas.getContext(\"2d\");\r\n\r\n    ctx.drawImage(\r\n      image,\r\n      crop.x * scaleX,\r\n      crop.y * scaleY,\r\n      crop.width * scaleX,\r\n      crop.height * scaleY,\r\n      0,\r\n      0,\r\n      crop.width,\r\n      crop.height\r\n    );\r\n\r\n    const croppedImageSrc = canvas.toDataURL(\"image/jpeg\");\r\n    setCroppedImage(croppedImageSrc);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input type=\"file\" onChange={onSelectFile} />\r\n      {src && (\r\n        <ReactCrop\r\n          src={src}\r\n          crop={crop}\r\n          ruleOfThirds\r\n          onComplete={onCropComplete}\r\n          onChange={(c) => setCrop(c)}\r\n        />\r\n      )}\r\n      {croppedImage && <img src={croppedImage} alt=\"Cropped\" />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dump;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}