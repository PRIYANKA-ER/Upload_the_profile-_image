{"ast":null,"code":"var _jsxFileName = \"D:\\\\program project\\\\React Django\\\\imageupload\\\\client\\\\src\\\\dump.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport ReactCrop from \"react-image-crop\";\nimport \"react-image-crop/dist/ReactCrop.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dump() {\n  _s();\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [crop, setCrop] = useState({\n    aspect: 1 / 1\n  });\n  const [croppedImage, setCroppedImage] = useState(null);\n  const inputFileRef = useRef(null);\n  const handleImageChange = e => {\n    const file = e.target.files[0];\n    setSelectedImage(file);\n    setCroppedImage(null);\n  };\n  const handleCropComplete = crop => {\n    if (selectedImage && crop.width && crop.height) {\n      getCroppedImage(selectedImage, crop, croppedImage => {\n        setCroppedImage(croppedImage);\n      });\n    }\n  };\n  const getCroppedImage = (image, crop, callback) => {\n    const canvas = document.createElement(\"canvas\");\n    const scaleX = image.naturalWidth / image.width;\n    const scaleY = image.naturalHeight / image.height;\n    const ctx = canvas.getContext(\"2d\");\n    canvas.width = crop.width;\n    canvas.height = crop.height;\n    ctx.drawImage(image, crop.x * scaleX, crop.y * scaleY, crop.width * scaleX, crop.height * scaleY, 0, 0, crop.width, crop.height);\n    canvas.toBlob(blob => {\n      const croppedImage = new File([blob], \"croppedImage.jpg\", {\n        type: \"image/jpeg\"\n      });\n      callback(croppedImage);\n    }, \"image/jpeg\");\n  };\n  const handleImageUpload = () => {\n    const formData = new FormData();\n    formData.append(\"profile_image\", croppedImage || selectedImage);\n    fetch(\"/api/profile/image-upload/\", {\n      method: \"POST\",\n      body: formData\n    }).then(response => response.json()).then(data => {\n      console.log(data.message);\n    }).catch(error => {\n      console.error(\"Error:\", error);\n    });\n  };\n  const handleCropImage = () => {\n    if (inputFileRef.current) {\n      inputFileRef.current.click();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Profile Image Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: handleImageChange,\n      style: {\n        display: \"none\"\n      },\n      ref: inputFileRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), selectedImage && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(ReactCrop, {\n        src: URL.createObjectURL(selectedImage),\n        crop: crop,\n        onChange: newCrop => setCrop(newCrop),\n        onComplete: handleCropComplete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), croppedImage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-preview\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: URL.createObjectURL(croppedImage),\n          alt: \"Cropped\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCropImage,\n      children: \"Select Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleImageUpload,\n      disabled: !selectedImage,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_s(Dump, \"KcqdsQCSM55VuLD4RImJWPPMcn8=\");\n_c = Dump;\nexport default Dump;\nvar _c;\n$RefreshReg$(_c, \"Dump\");","map":{"version":3,"names":["React","useState","useRef","ReactCrop","jsxDEV","_jsxDEV","Dump","_s","selectedImage","setSelectedImage","crop","setCrop","aspect","croppedImage","setCroppedImage","inputFileRef","handleImageChange","e","file","target","files","handleCropComplete","width","height","getCroppedImage","image","callback","canvas","document","createElement","scaleX","naturalWidth","scaleY","naturalHeight","ctx","getContext","drawImage","x","y","toBlob","blob","File","type","handleImageUpload","formData","FormData","append","fetch","method","body","then","response","json","data","console","log","message","catch","error","handleCropImage","current","click","className","children","fileName","_jsxFileName","lineNumber","columnNumber","accept","onChange","style","display","ref","src","URL","createObjectURL","newCrop","onComplete","alt","onClick","disabled","_c","$RefreshReg$"],"sources":["D:/program project/React Django/imageupload/client/src/dump.jsx"],"sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport ReactCrop from \"react-image-crop\";\r\nimport \"react-image-crop/dist/ReactCrop.css\";\r\n\r\nfunction Dump() {\r\n  const [selectedImage, setSelectedImage] = useState(null);\r\n  const [crop, setCrop] = useState({ aspect: 1 / 1 });\r\n  const [croppedImage, setCroppedImage] = useState(null);\r\n  const inputFileRef = useRef(null);\r\n\r\n  const handleImageChange = (e) => {\r\n    const file = e.target.files[0];\r\n    setSelectedImage(file);\r\n    setCroppedImage(null);\r\n  };\r\n\r\n  const handleCropComplete = (crop) => {\r\n    if (selectedImage && crop.width && crop.height) {\r\n      getCroppedImage(selectedImage, crop, (croppedImage) => {\r\n        setCroppedImage(croppedImage);\r\n      });\r\n    }\r\n  };\r\n\r\n  const getCroppedImage = (image, crop, callback) => {\r\n    const canvas = document.createElement(\"canvas\");\r\n    const scaleX = image.naturalWidth / image.width;\r\n    const scaleY = image.naturalHeight / image.height;\r\n    const ctx = canvas.getContext(\"2d\");\r\n\r\n    canvas.width = crop.width;\r\n    canvas.height = crop.height;\r\n\r\n    ctx.drawImage(\r\n      image,\r\n      crop.x * scaleX,\r\n      crop.y * scaleY,\r\n      crop.width * scaleX,\r\n      crop.height * scaleY,\r\n      0,\r\n      0,\r\n      crop.width,\r\n      crop.height\r\n    );\r\n\r\n    canvas.toBlob((blob) => {\r\n      const croppedImage = new File([blob], \"croppedImage.jpg\", {\r\n        type: \"image/jpeg\",\r\n      });\r\n      callback(croppedImage);\r\n    }, \"image/jpeg\");\r\n  };\r\n\r\n  const handleImageUpload = () => {\r\n    const formData = new FormData();\r\n    formData.append(\"profile_image\", croppedImage || selectedImage);\r\n    fetch(\"/api/profile/image-upload/\", {\r\n      method: \"POST\",\r\n      body: formData,\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(data.message);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error:\", error);\r\n      });\r\n  };\r\n\r\n  const handleCropImage = () => {\r\n    if (inputFileRef.current) {\r\n      inputFileRef.current.click();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Profile Image Upload</h1>\r\n      <input\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={handleImageChange}\r\n        style={{ display: \"none\" }}\r\n        ref={inputFileRef}\r\n      />\r\n      {selectedImage && (\r\n        <div>\r\n          <ReactCrop\r\n            src={URL.createObjectURL(selectedImage)}\r\n            crop={crop}\r\n            onChange={(newCrop) => setCrop(newCrop)}\r\n            onComplete={handleCropComplete}\r\n          />\r\n          {croppedImage && (\r\n            <div className=\"image-preview\">\r\n              <img src={URL.createObjectURL(croppedImage)} alt=\"Cropped\" />\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n      <button onClick={handleCropImage}>Select Image</button>\r\n      <button onClick={handleImageUpload} disabled={!selectedImage}>\r\n        Upload\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dump;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}