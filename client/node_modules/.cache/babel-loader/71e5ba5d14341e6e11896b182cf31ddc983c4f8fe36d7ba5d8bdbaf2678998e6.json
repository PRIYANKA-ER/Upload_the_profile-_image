{"ast":null,"code":"var _jsxFileName = \"D:\\\\program project\\\\React Django\\\\imageupload\\\\client\\\\src\\\\dump.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport ReactCrop from \"react-image-crop\";\nimport \"react-image-crop/dist/ReactCrop.css\";\nimport image from \"./Components/ImageUpload/nio 192.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageCropExample = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [crop, setCrop] = useState({\n    aspect: 1\n  });\n  const handleFileChange = event => {\n    const file = event.target.files[0];\n    setSelectedFile(URL.createObjectURL(file));\n  };\n  const handleCropChange = newCrop => {\n    setCrop(newCrop);\n  };\n  const handleCropComplete = cropResult => {\n    console.log(cropResult);\n    // Do something with the cropped image, e.g., upload to server\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Image Crop Example\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), selectedFile && /*#__PURE__*/_jsxDEV(ReactCrop, {\n      src: selectedFile,\n      crop: crop,\n      onChange: handleCropChange,\n      onComplete: handleCropComplete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageCropExample, \"qfLxdOOiZm5JtPriWnEDrXD44MQ=\");\n_c = ImageCropExample;\nexport default ImageCropExample;\nvar _c;\n$RefreshReg$(_c, \"ImageCropExample\");","map":{"version":3,"names":["React","useState","ReactCrop","image","jsxDEV","_jsxDEV","ImageCropExample","_s","selectedFile","setSelectedFile","crop","setCrop","aspect","handleFileChange","event","file","target","files","URL","createObjectURL","handleCropChange","newCrop","handleCropComplete","cropResult","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","src","onComplete","_c","$RefreshReg$"],"sources":["D:/program project/React Django/imageupload/client/src/dump.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport ReactCrop from \"react-image-crop\";\r\nimport \"react-image-crop/dist/ReactCrop.css\";\r\nimport image from \"./Components/ImageUpload/nio 192.png\";\r\n\r\nconst ImageCropExample = () => {\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [crop, setCrop] = useState({ aspect: 1 });\r\n\r\n  const handleFileChange = (event) => {\r\n    const file = event.target.files[0];\r\n    setSelectedFile(URL.createObjectURL(file));\r\n  };\r\n\r\n  const handleCropChange = (newCrop) => {\r\n    setCrop(newCrop);\r\n  };\r\n\r\n  const handleCropComplete = (cropResult) => {\r\n    console.log(cropResult);\r\n    // Do something with the cropped image, e.g., upload to server\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Image Crop Example</h1>\r\n      <input type=\"file\" accept=\"image/*\" onChange={handleFileChange} />\r\n      {selectedFile && (\r\n        <ReactCrop\r\n          src={selectedFile}\r\n          crop={crop}\r\n          onChange={handleCropChange}\r\n          onComplete={handleCropComplete}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageCropExample;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,kBAAkB;AACxC,OAAO,qCAAqC;AAC5C,OAAOC,KAAK,MAAM,sCAAsC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC;IAAEW,MAAM,EAAE;EAAE,CAAC,CAAC;EAE/C,MAAMC,gBAAgB,GAAIC,KAAK,IAAK;IAClC,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAClCR,eAAe,CAACS,GAAG,CAACC,eAAe,CAACJ,IAAI,CAAC,CAAC;EAC5C,CAAC;EAED,MAAMK,gBAAgB,GAAIC,OAAO,IAAK;IACpCV,OAAO,CAACU,OAAO,CAAC;EAClB,CAAC;EAED,MAAMC,kBAAkB,GAAIC,UAAU,IAAK;IACzCC,OAAO,CAACC,GAAG,CAACF,UAAU,CAAC;IACvB;EACF,CAAC;;EAED,oBACElB,OAAA;IAAAqB,QAAA,gBACErB,OAAA;MAAAqB,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3BzB,OAAA;MAAO0B,IAAI,EAAC,MAAM;MAACC,MAAM,EAAC,SAAS;MAACC,QAAQ,EAAEpB;IAAiB;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACjEtB,YAAY,iBACXH,OAAA,CAACH,SAAS;MACRgC,GAAG,EAAE1B,YAAa;MAClBE,IAAI,EAAEA,IAAK;MACXuB,QAAQ,EAAEb,gBAAiB;MAC3Be,UAAU,EAAEb;IAAmB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACvB,EAAA,CAhCID,gBAAgB;AAAA8B,EAAA,GAAhB9B,gBAAgB;AAkCtB,eAAeA,gBAAgB;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}