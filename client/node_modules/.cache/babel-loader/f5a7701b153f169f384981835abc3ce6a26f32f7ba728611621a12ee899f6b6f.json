{"ast":null,"code":"var _jsxFileName = \"D:\\\\program project\\\\React Django\\\\imageupload\\\\client\\\\src\\\\dump.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef } from \"react\";\nimport AvatarEditor from \"react-avatar-editor\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyEditor = () => {\n  _s();\n  const editor = useRef(null);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(AvatarEditor, {\n      ref: editor,\n      image: \"http://example.com/initialimage.jpg\",\n      width: 250,\n      height: 250,\n      border: 50,\n      scale: 1.2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        if (this.editor) {\n          // This returns a HTMLCanvasElement, it can be made into a data URL or a blob,\n          // drawn on another canvas, or added to the DOM.\n          const canvas = editor.current.getImage();\n\n          // If you want the image resized to the canvas size (also a HTMLCanvasElement)\n          const canvasScaled = editor.current.getImageScaledToCanvas();\n        }\n      },\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n_s(MyEditor, \"WbIXHOMGZsKhEgHeGrw0ax78v7Y=\");\n_c = MyEditor;\nexport default MyEditor;\nvar _c;\n$RefreshReg$(_c, \"MyEditor\");","map":{"version":3,"names":["React","useRef","AvatarEditor","jsxDEV","_jsxDEV","MyEditor","_s","editor","children","ref","image","width","height","border","scale","fileName","_jsxFileName","lineNumber","columnNumber","onClick","canvas","current","getImage","canvasScaled","getImageScaledToCanvas","_c","$RefreshReg$"],"sources":["D:/program project/React Django/imageupload/client/src/dump.jsx"],"sourcesContent":["import React, { useRef } from \"react\";\r\nimport AvatarEditor from \"react-avatar-editor\";\r\n\r\nconst MyEditor = () => {\r\n  const editor = useRef(null);\r\n\r\n  return (\r\n    <div>\r\n      <AvatarEditor\r\n        ref={editor}\r\n        image=\"http://example.com/initialimage.jpg\"\r\n        width={250}\r\n        height={250}\r\n        border={50}\r\n        scale={1.2}\r\n      />\r\n      <button\r\n        onClick={() => {\r\n          if (this.editor) {\r\n            // This returns a HTMLCanvasElement, it can be made into a data URL or a blob,\r\n            // drawn on another canvas, or added to the DOM.\r\n            const canvas = editor.current.getImage();\r\n\r\n            // If you want the image resized to the canvas size (also a HTMLCanvasElement)\r\n            const canvasScaled = editor.current.getImageScaledToCanvas();\r\n          }\r\n        }}\r\n      >\r\n        Save\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyEditor;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,QAAQ,OAAO;AACrC,OAAOC,YAAY,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAMC,MAAM,GAAGN,MAAM,CAAC,IAAI,CAAC;EAE3B,oBACEG,OAAA;IAAAI,QAAA,gBACEJ,OAAA,CAACF,YAAY;MACXO,GAAG,EAAEF,MAAO;MACZG,KAAK,EAAC,qCAAqC;MAC3CC,KAAK,EAAE,GAAI;MACXC,MAAM,EAAE,GAAI;MACZC,MAAM,EAAE,EAAG;MACXC,KAAK,EAAE;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC,eACFd,OAAA;MACEe,OAAO,EAAEA,CAAA,KAAM;QACb,IAAI,IAAI,CAACZ,MAAM,EAAE;UACf;UACA;UACA,MAAMa,MAAM,GAAGb,MAAM,CAACc,OAAO,CAACC,QAAQ,CAAC,CAAC;;UAExC;UACA,MAAMC,YAAY,GAAGhB,MAAM,CAACc,OAAO,CAACG,sBAAsB,CAAC,CAAC;QAC9D;MACF,CAAE;MAAAhB,QAAA,EACH;IAED;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACZ,EAAA,CA7BID,QAAQ;AAAAoB,EAAA,GAARpB,QAAQ;AA+Bd,eAAeA,QAAQ;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}