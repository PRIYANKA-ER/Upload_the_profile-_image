{"ast":null,"code":"var _jsxFileName = \"D:\\\\program project\\\\React Django\\\\imageupload\\\\client\\\\src\\\\dump.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport ReactCrop from \"react-image-crop\";\nimport \"react-image-crop/dist/ReactCrop.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dump() {\n  _s();\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [crop, setCrop] = useState({\n    unit: \"%\",\n    width: 30,\n    aspect: 1 / 1\n  });\n  const [croppedImage, setCroppedImage] = useState(null);\n  const inputFileRef = useRef(null);\n  const handleImageChange = e => {\n    const file = e.target.files[0];\n    setSelectedImage(URL.createObjectURL(file));\n    setCroppedImage(null);\n  };\n  const handleCropComplete = (crop, pixelCrop) => {\n    if (selectedImage) {\n      getCroppedImage(selectedImage, pixelCrop, croppedImage => {\n        setCroppedImage(croppedImage);\n      });\n    }\n  };\n  const getCroppedImage = (imageSrc, pixelCrop, callback) => {\n    const image = new Image();\n    image.src = imageSrc;\n    const canvas = document.createElement(\"canvas\");\n    const scaleX = image.naturalWidth / image.width;\n    const scaleY = image.naturalHeight / image.height;\n    const ctx = canvas.getContext(\"2d\");\n    canvas.width = pixelCrop.width;\n    canvas.height = pixelCrop.height;\n    ctx.drawImage(image, pixelCrop.x * scaleX, pixelCrop.y * scaleY, pixelCrop.width * scaleX, pixelCrop.height * scaleY, 0, 0, pixelCrop.width, pixelCrop.height);\n    canvas.toBlob(blob => {\n      const croppedImage = new File([blob], \"croppedImage.jpg\", {\n        type: \"image/jpeg\"\n      });\n      callback(URL.createObjectURL(croppedImage));\n    }, \"image/jpeg\");\n  };\n  const handleImageUpload = () => {\n    // Handle the image upload to your Django backend\n    // ...\n  };\n  const handleCropImage = () => {\n    if (inputFileRef.current) {\n      inputFileRef.current.click();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Profile Image Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: handleImageChange,\n      style: {\n        display: \"none\"\n      },\n      ref: inputFileRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), selectedImage && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(ReactCrop, {\n        src: selectedImage,\n        crop: crop,\n        onChange: newCrop => setCrop(newCrop),\n        onComplete: handleCropComplete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), croppedImage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-preview\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: croppedImage,\n          alt: \"Cropped\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCropImage,\n      children: \"Select Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleImageUpload,\n      disabled: !croppedImage,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(Dump, \"g0IaZkSAI+wGwBrG8YwpKIwyH60=\");\n_c = Dump;\nexport default Dump;\nvar _c;\n$RefreshReg$(_c, \"Dump\");","map":{"version":3,"names":["React","useState","useRef","ReactCrop","jsxDEV","_jsxDEV","Dump","_s","selectedImage","setSelectedImage","crop","setCrop","unit","width","aspect","croppedImage","setCroppedImage","inputFileRef","handleImageChange","e","file","target","files","URL","createObjectURL","handleCropComplete","pixelCrop","getCroppedImage","imageSrc","callback","image","Image","src","canvas","document","createElement","scaleX","naturalWidth","scaleY","naturalHeight","height","ctx","getContext","drawImage","x","y","toBlob","blob","File","type","handleImageUpload","handleCropImage","current","click","className","children","fileName","_jsxFileName","lineNumber","columnNumber","accept","onChange","style","display","ref","newCrop","onComplete","alt","onClick","disabled","_c","$RefreshReg$"],"sources":["D:/program project/React Django/imageupload/client/src/dump.jsx"],"sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport ReactCrop from \"react-image-crop\";\r\nimport \"react-image-crop/dist/ReactCrop.css\";\r\n\r\nfunction Dump() {\r\n  const [selectedImage, setSelectedImage] = useState(null);\r\n  const [crop, setCrop] = useState({ unit: \"%\", width: 30, aspect: 1 / 1 });\r\n  const [croppedImage, setCroppedImage] = useState(null);\r\n  const inputFileRef = useRef(null);\r\n\r\n  const handleImageChange = (e) => {\r\n    const file = e.target.files[0];\r\n    setSelectedImage(URL.createObjectURL(file));\r\n    setCroppedImage(null);\r\n  };\r\n\r\n  const handleCropComplete = (crop, pixelCrop) => {\r\n    if (selectedImage) {\r\n      getCroppedImage(selectedImage, pixelCrop, (croppedImage) => {\r\n        setCroppedImage(croppedImage);\r\n      });\r\n    }\r\n  };\r\n\r\n  const getCroppedImage = (imageSrc, pixelCrop, callback) => {\r\n    const image = new Image();\r\n    image.src = imageSrc;\r\n\r\n    const canvas = document.createElement(\"canvas\");\r\n    const scaleX = image.naturalWidth / image.width;\r\n    const scaleY = image.naturalHeight / image.height;\r\n    const ctx = canvas.getContext(\"2d\");\r\n\r\n    canvas.width = pixelCrop.width;\r\n    canvas.height = pixelCrop.height;\r\n\r\n    ctx.drawImage(\r\n      image,\r\n      pixelCrop.x * scaleX,\r\n      pixelCrop.y * scaleY,\r\n      pixelCrop.width * scaleX,\r\n      pixelCrop.height * scaleY,\r\n      0,\r\n      0,\r\n      pixelCrop.width,\r\n      pixelCrop.height\r\n    );\r\n\r\n    canvas.toBlob((blob) => {\r\n      const croppedImage = new File([blob], \"croppedImage.jpg\", {\r\n        type: \"image/jpeg\",\r\n      });\r\n      callback(URL.createObjectURL(croppedImage));\r\n    }, \"image/jpeg\");\r\n  };\r\n\r\n  const handleImageUpload = () => {\r\n    // Handle the image upload to your Django backend\r\n    // ...\r\n  };\r\n\r\n  const handleCropImage = () => {\r\n    if (inputFileRef.current) {\r\n      inputFileRef.current.click();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Profile Image Upload</h1>\r\n      <input\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={handleImageChange}\r\n        style={{ display: \"none\" }}\r\n        ref={inputFileRef}\r\n      />\r\n      {selectedImage && (\r\n        <div>\r\n          <ReactCrop\r\n            src={selectedImage}\r\n            crop={crop}\r\n            onChange={(newCrop) => setCrop(newCrop)}\r\n            onComplete={handleCropComplete}\r\n          />\r\n          {croppedImage && (\r\n            <div className=\"image-preview\">\r\n              <img src={croppedImage} alt=\"Cropped\" />\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n      <button onClick={handleCropImage}>Select Image</button>\r\n      <button onClick={handleImageUpload} disabled={!croppedImage}>\r\n        Upload\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dump;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}